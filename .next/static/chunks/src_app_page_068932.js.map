{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file://C%3A/Users/admin/Desktop/GITHUB/TelegramShopFrontend/src/app/page.js"],"sourcesContent":["\"use client\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport default function Home() {\r\n  const [validationMessage, setValidationMessage] = useState(\"Проверка...\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (typeof window !== \"undefined\") {\r\n      const checkTelegramWebApp = () => {\r\n        if (window.Telegram && window.Telegram.WebApp) {\r\n          console.log(\"Telegram WebApp найден\");\r\n          const webApp = window.Telegram.WebApp;\r\n          webApp.ready();\r\n          console.log(\"WebApp is ready\");\r\n\r\n          const initData = webApp.initData;\r\n          console.log(\"Init Data:\", initData);\r\n\r\n          if (!initData || initData.length === 0) {\r\n            console.error(\"Ошибка: Нет данных initData от Telegram.\");\r\n            setValidationMessage(\"Ошибка: нет данных от Telegram!\");\r\n            return;\r\n          }\r\n\r\n          setIsLoading(true);\r\n          setValidationMessage(\"Проверка...\");\r\n\r\n          fetch(\"https://shop.chasman.engineer/api/v1/auth/validate-init\", {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              \"accept\": \"*/*\",\r\n            },\r\n            body: JSON.stringify({ initData }),\r\n          })\r\n            .then((response) => response.json())\r\n            .then((data) => {\r\n              console.log(\"Validation Response:\", data);\r\n              \r\n              if (data.authToken) {\r\n                setValidationMessage(\"✅ Валидация успешна! Токен получен.\");\r\n              } else {\r\n                setValidationMessage(`❌ Ошибка: ${data.error || \"Неизвестная ошибка\"}`);\r\n              }\r\n            })\r\n            .catch((error) => {\r\n              console.error(\"Ошибка при отправке данных на сервер:\", error);\r\n              setValidationMessage(\"Ошибка при проверке пользователя.\");\r\n            })\r\n            .finally(() => {\r\n              setIsLoading(false);\r\n            });\r\n        } else {\r\n          console.error(\"Ошибка: Telegram WebApp недоступен!\");\r\n          setValidationMessage(\"Ошибка: Telegram WebApp недоступен!\");\r\n        }\r\n      };\r\n\r\n      if (window.Telegram && window.Telegram.WebApp) {\r\n        checkTelegramWebApp();\r\n      } else {\r\n        const script = document.createElement(\"script\");\r\n        script.src = \"https://telegram.org/js/telegram-web-app.js\";\r\n        script.async = true;\r\n        script.onload = checkTelegramWebApp;\r\n        document.body.appendChild(script);\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center min-h-screen bg-gray-100\">\r\n      <h1 className=\"text-3xl font-bold text-gray-800\">Welcome to Telegram Mini App</h1>\r\n      <p className=\"mt-4 text-gray-600\">This is a mini app built with React, Next.js, and Tailwind CSS.</p>\r\n      {isLoading && <p className=\"mt-4 text-blue-600\">Loading...</p>}\r\n      <div className=\"mt-6 p-4 bg-white shadow-md rounded-lg\">\r\n        <p className={validationMessage.startsWith(\"✅\") ? \"text-green-600\" : \"text-red-600\"}>{validationMessage}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":[],"mappings":";;;;AACA;;;AADA;;AAGe,SAAS;;IACtB,MAAM,CAAC,mBAAmB,qBAAqB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAC3D,MAAM,CAAC,WAAW,aAAa,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAE3C,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;0BAAE;YACR,wCAAmC;gBACjC,MAAM;0DAAsB;wBAC1B,IAAI,OAAO,QAAQ,IAAI,OAAO,QAAQ,CAAC,MAAM,EAAE;4BAC7C,QAAQ,GAAG,CAAC;4BACZ,MAAM,SAAS,OAAO,QAAQ,CAAC,MAAM;4BACrC,OAAO,KAAK;4BACZ,QAAQ,GAAG,CAAC;4BAEZ,MAAM,WAAW,OAAO,QAAQ;4BAChC,QAAQ,GAAG,CAAC,cAAc;4BAE1B,IAAI,CAAC,YAAY,SAAS,MAAM,KAAK,GAAG;gCACtC,QAAQ,KAAK,CAAC;gCACd,qBAAqB;gCACrB;4BACF;4BAEA,aAAa;4BACb,qBAAqB;4BAErB,MAAM,2DAA2D;gCAC/D,QAAQ;gCACR,SAAS;oCACP,gBAAgB;oCAChB,UAAU;gCACZ;gCACA,MAAM,KAAK,SAAS,CAAC;oCAAE;gCAAS;4BAClC,GACG,IAAI;sEAAC,CAAC,WAAa,SAAS,IAAI;qEAChC,IAAI;sEAAC,CAAC;oCACL,QAAQ,GAAG,CAAC,wBAAwB;oCAEpC,IAAI,KAAK,SAAS,EAAE;wCAClB,qBAAqB;oCACvB,OAAO;wCACL,qBAAqB,CAAC,UAAU,EAAE,KAAK,KAAK,IAAI,sBAAsB;oCACxE;gCACF;qEACC,KAAK;sEAAC,CAAC;oCACN,QAAQ,KAAK,CAAC,yCAAyC;oCACvD,qBAAqB;gCACvB;qEACC,OAAO;sEAAC;oCACP,aAAa;gCACf;;wBACJ,OAAO;4BACL,QAAQ,KAAK,CAAC;4BACd,qBAAqB;wBACvB;oBACF;;gBAEA,IAAI,OAAO,QAAQ,IAAI,OAAO,QAAQ,CAAC,MAAM,EAAE;oBAC7C;gBACF,OAAO;oBACL,MAAM,SAAS,SAAS,aAAa,CAAC;oBACtC,OAAO,GAAG,GAAG;oBACb,OAAO,KAAK,GAAG;oBACf,OAAO,MAAM,GAAG;oBAChB,SAAS,IAAI,CAAC,WAAW,CAAC;gBAC5B;YACF;QACF;yBAAG,EAAE;IAEL,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAG,WAAU;0BAAmC;;;;;;0BACjD,6LAAC;gBAAE,WAAU;0BAAqB;;;;;;YACjC,2BAAa,6LAAC;gBAAE,WAAU;0BAAqB;;;;;;0BAChD,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAE,WAAW,kBAAkB,UAAU,CAAC,OAAO,mBAAmB;8BAAiB;;;;;;;;;;;;;;;;;AAI9F;GA9EwB;KAAA"}},
    {"offset": {"line": 143, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}